/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include "../JuceLibraryCode/AppConfig.h"
#include "juce_StandaloneFilterWindow.h"

//==============================================================================
class gstepstandaloneApplication  : public JUCEApplication
{
public:
    //==============================================================================
    gstepstandaloneApplication() {}

    const String getApplicationName()
    {
        return ProjectInfo::projectName;
    }
    const String getApplicationVersion()
    {
        return ProjectInfo::versionString;
    }
    bool moreThanOneInstanceAllowed()
    {
        return true;
    }

    //==============================================================================
    void initialise (const String&)
    {
        standaloneFilterWindow = new StandaloneFilterWindow( getApplicationName() + String(" ") + getApplicationVersion() );
#ifndef PROFILE
#if JUCE_LINUX || JUCE_WINDOWS
        standaloneFilterWindow->setUsingNativeTitleBar( false );
#else
        standaloneFilterWindow->setUsingNativeTitleBar( false );
#endif
        standaloneFilterWindow->setDropShadowEnabled( true );

        standaloneFilterWindow->setTitleBarButtonsRequired (DocumentWindow::minimiseButton | DocumentWindow::closeButton | DocumentWindow::maximiseButton, false );
        standaloneFilterWindow->setResizable(true,true);

        standaloneFilterWindow->addToDesktop();
        standaloneFilterWindow->setVisible(true);
        standaloneFilterWindow->setEnabled(true);
#endif
    }

    void shutdown()
    {
        DBG( "USR QUIT") ;
        standaloneFilterWindow = nullptr; // (deletes our window)
    }

//==============================================================================
    void suspended() override {}
    void resumed() override {}

    void systemRequestedQuit()
    {
        DBG( "SYS QUIT") ;

        quit();
    }

    void anotherInstanceStarted (const String&)
    {
    }

private:
    ScopedPointer<StandaloneFilterWindow> standaloneFilterWindow;

    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (gstepstandaloneApplication)
};

//==============================================================================
// This macro generates the main() routine that launches the app.
START_JUCE_APPLICATION (gstepstandaloneApplication)
